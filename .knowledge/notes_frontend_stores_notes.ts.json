{"is_source_file": true, "format": "TypeScript", "description": "This file defines a Pinia store for managing notes, including types, state, getters, and actions for CRUD operations and filtering.", "external_files": ["pinia"], "external_methods": ["defineStore"], "published": ["useNotesStore", "Note", "NoteFilter", "STORAGE_KEY", "uuid", "nowISO"], "classes": [], "methods": [{"name": "load", "description": "Loads notes from local storage or seeds initial data if none exists."}, {"name": "persist", "description": "Persists current notes to local storage."}, {"name": "seed", "description": "Seeds the store with an initial welcome note."}, {"name": "createNote", "description": "Creates a new note with provided partial data."}, {"name": "updateNote", "description": "Updates an existing note identified by ID with a partial set of changes."}, {"name": "deleteNote", "description": "Deletes a note by ID."}, {"name": "list", "description": "Returns a list of notes filtered and sorted based on provided criteria."}, {"name": "function nowISO() { return new Date().toISOString() } nowISO", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function uuid() { uuid", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "crypto.randomUUID", "new Date().toISOString()"], "search-terms": ["pinia", "notes store", "note filtering", "local storage", "note CRUD", "notes frontend"], "state": 2, "file_id": 11, "knowledge_revision": 23, "git_revision": "", "ctags": [{"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "NoteFilter", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^export type NoteFilter = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^const STORAGE_KEY = 'notes_data_v1'$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "current", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^      const current = this.notes[idx]$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^      const current = this.notes[idx]$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^      const idx = this.notes.findIndex(n => n.id === id)$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^      this.notes[idx] = updated$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^      let list = [...this.notes]$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "nowISO", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^function nowISO() { return new Date().toISOString() }$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "order", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^      const order = filter?.order || 'desc'$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^        const q = filter.q.toLowerCase()$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^        let r = 0$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "set", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^        const set = new Set(filter.tags.map(t => t.toLowerCase()))$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "sort", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^      const sort = filter?.sort || 'updated'$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^        title: (patch.title ?? current.title).trim(),$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^      const updated: Note = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "useNotesStore", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^export const useNotesStore = defineStore('notes', {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "uuid", "path": "/home/kavia/workspace/code-generation/note-organizer-12369-12396/notes_frontend/stores/notes.ts", "pattern": "/^function uuid() {$/", "language": "TypeScript", "kind": "function"}], "hash": "7a887f1b1e5582476782f0e0707fc378", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/stores/notes.ts", "fields": [{"name": "let list = [...this.notes]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let r = 0", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"23": ""}]}